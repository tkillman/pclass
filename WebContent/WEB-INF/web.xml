<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>pclass</display-name>

  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  
  <context-param>
  <description>초기화파라미터</description>
  <param-name>이름</param-name>
  <param-value>값</param-value>
  </context-param>
  

	<context-param>
	<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
	<param-value>resource.message</param-value>
	</context-param>
  
  <context-param>
  <param-name>checkLevel</param-name>
  <param-value>5</param-value>
  </context-param>
  
  
  <context-param>
  <param-name>javax.servlet.jsp.jstl.fmt.locale</param-name>
  <param-value>ko_kr</param-value>
  </context-param>
  <!-- 한글로 보여주겠다. -->
  
  <context-param>
  <param-name>javax.servlet.jsp.jstl.fmt.timeZone</param-name> 
  <param-value>Asia/Seoul</param-value>
  </context-param>
  
  <!-- 지역을 한국으로 설정하겠다. -->
  
  
  
  <!-- filter 사용 시작 -->
    <filter>
    <filter-name>sitemesh</filter-name>
    <filter-class>
	com.opensymphony.sitemesh.webapp.SiteMeshFilter
	</filter-class>
 	 </filter>
  	
  	<filter-mapping>
    <filter-name>sitemesh</filter-name>
    <url-pattern>/jsp/Exam10/sitemesh/*</url-pattern>
	  </filter-mapping>
	  
    <!-- filter 사용 끝 -->
  
  
  
  
  
  
  <!-- load-on-startup의 뜻은 서버가 시작할 때 1번 실행해라. -->
  
  <servlet>
  <servlet-name>DBCPInit</servlet-name>
  <servlet-class>jdbc.DBCPInit</servlet-class>
  <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!--  tiles 이용을 위한 servlet 등록 시작 -->
    
    <!-- ',' 앞뒤로 공백을 주면 안된다!!!!!!!!!!!!!!!!!!!!!! -->
    
     <servlet>
    <servlet-name>tiles</servlet-name>
    <servlet-class>org.apache.tiles.web.startup.TilesServlet</servlet-class>
    <init-param>
      <param-name>org.apache.tiles.impl.BasicTilesContainer.DEFINITIONS_CONFIG</param-name>
      <param-value> /WEB-INF/tiles-hello.xml,/WEB-INF/tiles-service.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  
    <!--  tiles 이용을 위한 servlet 등록 끝 -->
  
  
  <!-- url 요청을 통한 tiles를 부르는 방법 -->
  <servlet>
    <servlet-name>TilesDispatchServlet</servlet-name>
    <servlet-class>org.apache.tiles.web.util.TilesDispatchServlet</servlet-class>
  </servlet>
  
  
  <servlet-mapping>
    <servlet-name>TilesDispatchServlet</servlet-name>
    <url-pattern>*.tiles</url-pattern>
  </servlet-mapping> 
  
  <!-- 타일 요청을 uri를 통해 지정할 수 있도록  -->
   
  
   <!-- mvc 패턴 공부를 위한 설정 시작  --> 
  <!-- @WebServlet("simple") 과 동일하다. -->
  
  <servlet>
	<servlet-name>SimpleController</servlet-name>
	<servlet-class>mvc.SimpleController</servlet-class>
	</servlet>
	
	<servlet-mapping>
	<servlet-name>SimpleController</servlet-name>
	<url-pattern>/simple</url-pattern>
	</servlet-mapping>
  
  <!-- mvc 패턴 공부를 위한 설정 시작  --> 
  
  
  
  
  
  <!-- 시작 -->
  
  	<servlet>
	<servlet-name>ControllerUsingFile</servlet-name>
	<servlet-class>mvc.controller.ControllerUsingFile</servlet-class>
	<init-param>
		<param-name>configFile</param-name>
		<param-value>/WEB-INF/commandHandler.properties</param-value>
	</init-param>
	</servlet>
	<servlet-mapping>
	<servlet-name>ControllerUsingFile</servlet-name>
	<url-pattern>/controllerUsingFile</url-pattern>
	</servlet-mapping>
  
    <!-- 끝 -->
  
  
  
  
  <!-- 시작 -->
  <servlet>
	<servlet-name>ControllerUsingURI</servlet-name>
	<servlet-class>mvc.controller.ControllerUsingURI</servlet-class>
	<init-param>
		<param-name>configFile2</param-name>
		<param-value>
			/WEB-INF/commandHandlerURI.properties
		</param-value>
	</init-param>
</servlet>
	
<servlet-mapping>
	<servlet-name>ControllerUsingURI</servlet-name>
	<url-pattern>*.do</url-pattern>
</servlet-mapping>
  
 <!-- 끝 --> 
  
  
  
  
  <!-- 
  
  servlet 사용 시작
  
  <servlet>
  <servlet-name>NowServlet</servlet-name>
  <servlet-class>day01.NowServlet</servlet-class>
  </servlet>
  
  
  <servlet-mapping>
  <servlet-name>NowServlet</servlet-name>
  <url-pattern>/Now</url-pattern>
  </servlet-mapping>
   
   servlet 사용 끝
   -->
   
   <!-- 
   
   에러 페이지 설정 시작
   <error-page>
   <error-code>404</error-code>
   <location>/Exam4/error/error404.jsp</location>
   </error-page>
   

   <error-page>
   <exception-type>java.lang.NullPointerException</exception-type>
   <location>/Exam4/error/errorNullPointer.jsp</location>
   </error-page> 
   
   에러 페이시 설정 끝
   -->
 
 <!-- servlet 사용 시작 -->
 <!-- 
	<servlet>
   <servlet-name>MessageDaoProviderInit</servlet-name>
  <servlet-class>dao.MessageDaoProviderInit</servlet-class>
  <init-param>
  	<param-name>dbms</param-name>
  	<param-value>oracle</param-value>
  </init-param>
  <load-on-startup>1</load-on-startup>
	</servlet> -->
  
<!--  -->


<!-- jsp 초기 설정값 지정 시작  -->
  
   <jsp-config>
   <jsp-property-group>
   <url-pattern>/jsp/Exam3/view/*</url-pattern>
   <include-prelude>/jsp/Exam3/common/variable.jspf</include-prelude>
   <include-coda>/jsp/Exam3/common/footer.jspf</include-coda>
   </jsp-property-group>
   </jsp-config>
   
   <!-- jsp 초기 설정값 지정 끝 -->
   
  <!--  
  
  <error-page>
   <exception-type>java.lang.NumberFormatException</exception-type>
   <location>/guestBook/errorView.jsp</location>
   </error-page>
   
   
   --> 
   
</web-app>